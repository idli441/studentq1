django-admin startproject employee_promo
cd employee_promo
python manage.py startapp promotion
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
employee_promo

asgi.py
import os

from django.core.asgi import get_asgi_application

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "employee_promo.settings")

application = get_asgi_application()
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

settings.py

"""
Django settings for employee_promo project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-1cb(c2#li$bhiao)r#0j(ptao-j0d0j2wk+f6mbdr04ddo%z4d"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "promotion",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "employee_promo.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "employee_promo.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

urls.py
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('promotion.urls')),
]
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

wsgi.py
import os

from django.core.wsgi import get_wsgi_application

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "employee_promo.settings")

application = get_wsgi_application()
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

promotion

apps.py
from django.apps import AppConfig


class PromotionConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "promotion"

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
promotion/templates/promotion/form.html

<!DOCTYPE html>
<html>
<head>
    <title>Promotion Eligibility</title>
</head>
<body>
    <h2>Check Promotion Eligibility</h2>
    <form method="post">
        {% csrf_token %}
        {{ form.as_p }}
        <button type="submit">Am I Eligible for Promotion</button>
    </form>
    {% if result is not None %}
        <p><strong>Eligible: </strong>{{ result }}</p>
    {% endif %}
</body>
</html>

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
forms.py
from django import forms
from .models import Employee

class PromotionForm(forms.Form):
    emp_id = forms.ModelChoiceField(queryset=Employee.objects.all(), label="Employee ID")
    doj = forms.DateField(label="Date of Joining", widget=forms.DateInput(attrs={'type': 'date'}))

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

models.py
from django.db import models

# Create your models here.
from django.db import models

class Employee(models.Model):
    emp_id = models.CharField(max_length=10, unique=True)

    def __str__(self):
        return self.emp_id
urls.py
from django.urls import path
from .views import promotion_view

urlpatterns = [
    path('promotion/', promotion_view, name='promotion_check'),

]
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

views.py
from django.shortcuts import render

# Create your views here.
from django.shortcuts import render
from .forms import PromotionForm
from datetime import date

def promotion_view(request):
    result = None
    if request.method == 'POST':
        form = PromotionForm(request.POST)
        if form.is_valid():
            doj = form.cleaned_data['doj']
            today = date.today()
            experience = today.year - doj.year - ((today.month, today.day) < (doj.month, doj.day))
            result = "YES" if experience >= 5 else "NO"
    else:
        form = PromotionForm()
    return render(request, 'promotion/form.html', {'form': form, 'result': result})
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
manage.py

#!/usr/bin/env python
"""Django's command-line utility for administrative tasks."""
import os
import sys


def main():
    """Run administrative tasks."""
    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "employee_promo.settings")
    try:
        from django.core.management import execute_from_command_line
    except ImportError as exc:
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed and "
            "available on your PYTHONPATH environment variable? Did you "
            "forget to activate a virtual environment?"
        ) from exc
    execute_from_command_line(sys.argv)


if __name__ == "__main__":
    main()














